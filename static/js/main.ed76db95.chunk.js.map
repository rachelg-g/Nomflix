{"version":3,"sources":["assets/noPosterSmall.png","Components/Section.js","Components/Loader.js","Components/Message.js","Components/Poster.js","Routes/Home/HomePresenter.js","api.js","Routes/Home/index.js","Routes/Home/HomeContainer.js","Routes/TV/TVPresenter.js","Routes/TV/index.js","Routes/TV/TVContainer.js","Components/Header.js","Routes/Search/SearchPresenter.js","Routes/Search/index.js","Routes/Search/SearchContainer.js","Routes/Detail/DetailPresenter.js","Routes/Detail/index.js","Routes/Detail/DetailContainer.js","Components/Router.js","Components/GlobalStyles.js","Components/App.js","index.js"],"names":["module","exports","Container","styled","div","Title","span","Grid","Section","title","children","role","aria-label","Text","props","color","Message","text","Image","bgUrl","Rating","ImageContainer","Year","Poster","id","imageUrl","rating","year","isMovie","to","require","length","substring","HomePresenter","nowPlaying","popular","upcoming","loading","error","Loader","map","movie","key","poster_path","original_title","vote_average","release_date","api","axios","create","baseURL","params","api_key","language","moviesApi","get","movieDetail","append_to_response","search","term","query","encodeURIComponent","tvApi","topRated","airingToday","showDetail","HomeContainer","state","data","results","this","setState","React","Component","TVPresenter","show","original_name","first_air_date","TVContainer","Header","header","List","ul","Item","li","current","SLink","Link","withRouter","pathname","location","Form","form","Input","input","SearchPresenter","movieResults","tvResults","searchTerm","handleSubmit","updateTerm","onSubmit","placeholder","value","onChange","SearchContainer","event","preventDefault","searchByTerm","target","a","Backdrop","bgImage","Content","Cover","Data","h3","ItemContainer","Divider","Overview","p","DetailPresenter","result","backdrop_path","runtime","episode_run_time","genres","genre","index","name","overview","DetailContainer","includes","match","push","history","parsedId","parseInt","isNaN","path","exact","component","Home","TV","Search","Detail","from","globalStyles","createGlobalStyle","reset","App","Router","GlobalStyles","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.ed76db95.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/noPosterSmall.87a0eb6a.png\";","import React from 'react'\nimport PropTypes from 'prop-types'\nimport styled from 'styled-components'\n\nconst Container = styled.div`\n  :not(:last-child) {\n    margin-bottom: 50px;\n  }\n`\n\nconst Title = styled.span`\n  font-size: 14px;\n  font-weight: 600;\n`\n\nconst Grid = styled.div`\n  margin-top: 25px;\n  display: grid;\n  grid-template-columns: repeat(auto-fill, 125px);\n  grid-gap: 25px;\n`\n\nconst Section = ({ title, children }) => (\n  <Container>\n    <Title>{title}</Title>\n    <Grid>{children}</Grid>\n  </Container>\n)\n\nSection.propTypes = {\n  title: PropTypes.string.isRequired,\n  children: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.node), PropTypes.node]),\n}\n\nexport default Section\n","import React from 'react'\nimport styled from 'styled-components'\n\nconst Container = styled.div`\n  height: 100vh;\n  width: 100vw;\n  display: flex;\n  justify-content: center;\n  font-size: 28px;\n  margin-top: 20px;\n`\n\nexport default () => (\n  <Container>\n    <span role=\"img\" aria-label=\"Loading\">\n      ⏰\n    </span>\n  </Container>\n)\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport styled from 'styled-components'\n\nconst Container = styled.div`\n  width: 100vw;\n  display: flex;\n  justify-content: center;\n`\n\nconst Text = styled.span`\n  color: ${props => props.color};\n`\n\nconst Message = ({ text, color }) => (\n  <Container>\n    <Text color={color}>{text}</Text>\n  </Container>\n)\n\nMessage.propTypes = {\n  text: PropTypes.string.isRequired,\n  color: PropTypes.string.isRequired,\n}\n\nexport default Message\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport { Link } from 'react-router-dom'\nimport styled from 'styled-components'\n\nconst Container = styled.div`\n  font-size: 12px;\n`\n\nconst Image = styled.div`\n  background-image: url(${props => props.bgUrl});\n  height: 180px;\n  background-size: cover;\n  border-radius: 4px;\n  background-position: center center;\n  transition: opacity 0.1s linear;\n`\n\nconst Rating = styled.span`\n  bottom: 5px;\n  right: 5px;\n  position: absolute;\n  opacity: 0;\n  transition: opacity 0.1s linear;\n`\n\nconst ImageContainer = styled.div`\n  margin-bottom: 5px;\n  position: relative;\n  &:hover {\n    ${Image} {\n      opacity: 0.3;\n    }\n    ${Rating} {\n      opacity: 1;\n    }\n  }\n`\n\nconst Title = styled.span`\n  display: block;\n  margin-bottom: 3px;\n`\n\nconst Year = styled.span`\n  font-size: 10px;\n  color: rgba(255, 255, 255, 0.5);\n`\n\nconst Poster = ({ id, imageUrl, title, rating, year, isMovie = false }) => (\n  <Link to={isMovie ? `/movie/${id}` : `/show/${id}`}>\n    <Container>\n      <ImageContainer>\n        <Image\n          bgUrl={\n            imageUrl\n              ? `https://image.tmdb.org/t/p/w300${imageUrl}`\n              : require('../assets/noPosterSmall.png')\n          }\n        />\n\n        <Rating>\n          <span role=\"img\" aria-label=\"rating\">\n            ⭐️\n          </span>{' '}\n          {rating}/10\n        </Rating>\n      </ImageContainer>\n      <Title>{title.length > 18 ? `${title.substring(0, 18)}...` : title}</Title>\n      <Year>{year}</Year>\n    </Container>\n  </Link>\n)\n\nPoster.propTypes = {\n  id: PropTypes.number.isRequired,\n  imageUrl: PropTypes.string,\n  title: PropTypes.string.isRequired,\n  rating: PropTypes.number,\n  year: PropTypes.string,\n  isMovie: PropTypes.bool,\n}\n\nexport default Poster\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport styled from 'styled-components'\nimport Helmet from 'react-helmet'\nimport Section from 'Components/Section'\nimport Loader from '../../Components/Loader'\nimport Message from '../../Components/Message'\nimport Poster from '../../Components/Poster'\n\nconst Container = styled.div`\n  padding: 20px;\n`\n\nconst HomePresenter = ({ nowPlaying, popular, upcoming, loading, error }) => (\n  <>\n    <Helmet>\n      <title>Movies | GFlix</title>\n    </Helmet>\n    {loading ? (\n      <Loader />\n    ) : (\n      <Container>\n        <Helmet>\n          <title>Movies | GFlix</title>\n        </Helmet>\n        {nowPlaying && nowPlaying.length > 0 && (\n          <Section title=\"Now Playing\">\n            {nowPlaying.map(movie => (\n              <Poster\n                key={movie.id}\n                id={movie.id}\n                imageUrl={movie.poster_path}\n                title={movie.original_title}\n                rating={movie.vote_average}\n                year={movie.release_date.substring(0, 4)}\n                isMovie={true}\n              />\n            ))}\n          </Section>\n        )}\n        {upcoming && upcoming.length > 0 && (\n          <Section title=\"Upcoming Movies\">\n            {upcoming.map(movie => (\n              <Poster\n                key={movie.id}\n                id={movie.id}\n                imageUrl={movie.poster_path}\n                title={movie.original_title}\n                rating={movie.vote_average}\n                year={movie.release_date.substring(0, 4)}\n                isMovie={true}\n              />\n            ))}\n          </Section>\n        )}\n        {popular && popular.length > 0 && (\n          <Section title=\"Popular Movies\">\n            {popular.map(movie => (\n              <Poster\n                key={movie.id}\n                id={movie.id}\n                imageUrl={movie.poster_path}\n                title={movie.original_title}\n                rating={movie.vote_average}\n                year={movie.release_date.substring(0, 4)}\n                isMovie={true}\n              />\n            ))}\n          </Section>\n        )}\n        {error && <Message color=\"#e74c3c\" text={error} />}\n      </Container>\n    )}\n  </>\n)\n\nHomePresenter.propTypes = {\n  nowPlaying: PropTypes.array,\n  popular: PropTypes.array,\n  upcoming: PropTypes.array,\n  loading: PropTypes.bool.isRequired,\n  error: PropTypes.string,\n}\n\nexport default HomePresenter\n","import axios from 'axios'\n\nconst api = axios.create({\n  baseURL: 'https://api.themoviedb.org/3/',\n  params: {\n    api_key: '10923b261ba94d897ac6b81148314a3f',\n    language: 'en-US',\n  },\n})\n\nexport const moviesApi = {\n  nowPlaying: () => api.get('movie/now_playing'),\n  upcoming: () => api.get('movie/upcoming'),\n  popular: () => api.get('movie/popular'),\n  movieDetail: id =>\n    api.get(`movie/${id}`, {\n      params: {\n        append_to_response: 'videos',\n      },\n    }),\n  search: term =>\n    api.get('search/movie', {\n      params: {\n        query: encodeURIComponent(term),\n      },\n    }),\n}\n\nexport const tvApi = {\n  topRated: () => api.get('tv/top_rated'),\n  popular: () => api.get('tv/popular'),\n  airingToday: () => api.get('tv/airing_today'),\n  showDetail: id =>\n    api.get(`tv/${id}`, {\n      params: {\n        append_to_response: 'videos',\n      },\n    }),\n  search: term =>\n    api.get('search/tv', {\n      params: {\n        query: encodeURIComponent(term),\n      },\n    }),\n}\n","import HomeContainer from './HomeContainer'\n\nexport default HomeContainer\n","import React from 'react'\nimport HomePresenter from './HomePresenter'\nimport { moviesApi } from 'api'\n\nexport default class extends React.Component {\n  state = {\n    nowPlaying: null,\n    upcoming: null,\n    popular: null,\n    error: null,\n    loading: true,\n  }\n\n  async componentDidMount() {\n    try {\n      const {\n        data: { results: nowPlaying },\n      } = await moviesApi.nowPlaying()\n      const {\n        data: { results: upcoming },\n      } = await moviesApi.upcoming()\n      const {\n        data: { results: popular },\n      } = await moviesApi.popular()\n      this.setState({\n        nowPlaying,\n        upcoming,\n        popular,\n      })\n    } catch {\n      this.setState({\n        error: \"Can't find movie information.\",\n      })\n    } finally {\n      this.setState({\n        loading: false,\n      })\n    }\n  }\n\n  render() {\n    const { nowPlaying, upcoming, popular, error, loading } = this.state\n    return (\n      <HomePresenter\n        nowPlaying={nowPlaying}\n        upcoming={upcoming}\n        popular={popular}\n        error={error}\n        loading={loading}\n      />\n    )\n  }\n}\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport styled from 'styled-components'\nimport Helmet from 'react-helmet'\nimport Section from '../../Components/Section'\nimport Loader from '../../Components/Loader'\nimport Message from '../../Components/Message'\nimport Poster from '../../Components/Poster'\n\nconst Container = styled.div`\n  padding: 20px;\n`\n\nconst TVPresenter = ({ topRated, popular, airingToday, loading, error }) => (\n  <>\n    <Helmet>\n      <title>TV Shows | GFlix</title>\n    </Helmet>\n    {loading ? (\n      <Loader />\n    ) : (\n      <Container>\n        {topRated && topRated.length > 0 && (\n          <Section title=\"Top Rated Shows\">\n            {topRated.map(show => (\n              <Poster\n                key={show.id}\n                id={show.id}\n                imageUrl={show.poster_path}\n                title={show.original_name}\n                rating={show.vote_average}\n                year={show.first_air_date.substring(0, 4)}\n              />\n            ))}\n          </Section>\n        )}\n        {popular && popular.length > 0 && (\n          <Section title=\"Popular Shows\">\n            {popular.map(show => (\n              <Poster\n                key={show.id}\n                id={show.id}\n                imageUrl={show.poster_path}\n                title={show.original_name}\n                rating={show.vote_average}\n                year={show.first_air_date.substring(0, 4)}\n              />\n            ))}\n          </Section>\n        )}\n        {airingToday && airingToday.length > 0 && (\n          <Section title=\"Airing Today\">\n            {airingToday.map(show => (\n              <Poster\n                key={show.id}\n                id={show.id}\n                imageUrl={show.poster_path}\n                title={show.original_name}\n                rating={show.vote_average}\n                year={show.first_air_date.substring(0, 4)}\n              />\n            ))}\n          </Section>\n        )}\n        {error && <Message color=\"#e74c3c\" text={error} />}\n      </Container>\n    )}\n  </>\n)\n\nTVPresenter.propTypes = {\n  topRated: PropTypes.array,\n  popular: PropTypes.array,\n  airingToday: PropTypes.array,\n  loading: PropTypes.bool.isRequired,\n  error: PropTypes.string,\n}\n\nexport default TVPresenter\n","import TVContainer from './TVContainer'\n\nexport default TVContainer\n","import React from 'react'\nimport TVPresenter from './TVPresenter'\nimport { tvApi } from '../../api'\n\nexport default class extends React.Component {\n  state = {\n    topRated: null,\n    popular: null,\n    airingToday: null,\n    loading: true,\n    error: null,\n  }\n\n  async componentDidMount() {\n    try {\n      const {\n        data: { results: topRated },\n      } = await tvApi.topRated()\n      const {\n        data: { results: popular },\n      } = await tvApi.popular()\n      const {\n        data: { results: airingToday },\n      } = await tvApi.airingToday()\n      this.setState({ topRated, popular, airingToday })\n    } catch {\n      this.setState({\n        error: \"Can't find TV information.\",\n      })\n    } finally {\n      this.setState({ loading: false })\n    }\n  }\n\n  render() {\n    const { topRated, popular, airingToday, loading, error } = this.state\n    return (\n      <TVPresenter\n        topRated={topRated}\n        popular={popular}\n        airingToday={airingToday}\n        loading={loading}\n        error={error}\n      />\n    )\n  }\n}\n","import React from 'react'\nimport { Link, withRouter } from 'react-router-dom'\nimport styled from 'styled-components'\n\nconst Header = styled.header`\n  color: white;\n  position: fixed;\n  top: 0;\n  left: 0;\n  width: 100%;\n  height: 50px;\n  display: flex;\n  align-items: center;\n  background-color: rgba(20, 20, 20, 0.8);\n  z-index: 10;\n  box-shadow: 0px 1px 5px 2px rgba(0, 0, 0, 0.8);\n`\n\nconst List = styled.ul`\n  display: flex;\n`\n\nconst Item = styled.li`\n  width: 80px;\n  height: 50px;\n  text-align: center;\n  border-bottom: 3px solid ${props => (props.current ? '#3498db' : 'transparent')};\n  transition: border-bottom 0.5s ease-in-out;\n`\n\nconst SLink = styled(Link)`\n  height: 50px;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n`\n\nexport default withRouter(({ location: { pathname } }) => (\n  <Header>\n    <List>\n      <Item current={pathname === '/'}>\n        <SLink to=\"/\">Movies</SLink>\n      </Item>\n      <Item current={pathname === '/tv'}>\n        <SLink to=\"/tv\">TV</SLink>\n      </Item>\n      <Item current={pathname === '/search'}>\n        <SLink to=\"/search\">Search</SLink>\n      </Item>\n    </List>\n  </Header>\n))\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport styled from 'styled-components'\nimport Helmet from 'react-helmet'\nimport Loader from 'Components/Loader'\nimport Section from 'Components/Section'\nimport Message from '../../Components/Message'\nimport Poster from '../../Components/Poster'\n\nconst Container = styled.div`\n  padding: 20px;\n`\n\nconst Form = styled.form`\n  margin-bottom: 50px;\n  width: 100%;\n`\n\nconst Input = styled.input`\n  all: unset;\n  font-size: 28px;\n  width: 100%;\n`\n\nconst SearchPresenter = ({\n  movieResults,\n  tvResults,\n  loading,\n  searchTerm,\n  handleSubmit,\n  error,\n  updateTerm,\n}) => (\n  <Container>\n    <Helmet>\n      <title>Search | GFlix</title>\n    </Helmet>\n    <Form onSubmit={handleSubmit}>\n      <Input placeholder=\"Search Movies or TV Shows...\" value={searchTerm} onChange={updateTerm} />\n    </Form>\n    {loading ? (\n      <Loader />\n    ) : (\n      <>\n        {movieResults && movieResults.length > 0 && (\n          <Section title=\"Movie Results\">\n            {movieResults.map(movie => (\n              <Poster\n                key={movie.id}\n                id={movie.id}\n                imageUrl={movie.poster_path}\n                title={movie.original_title}\n                rating={movie.vote_average}\n                year={movie.release_date.substring(0, 4)}\n                isMovie={true}\n              />\n            ))}\n          </Section>\n        )}\n        {tvResults && tvResults.length > 0 && (\n          <Section title=\"TV Show Results\">\n            {tvResults.map(show => (\n              <Poster\n                key={show.id}\n                id={show.id}\n                imageUrl={show.poster_path}\n                title={show.original_name}\n                rating={show.vote_average}\n                year={show.first_air_date.substring(0, 4)}\n              />\n            ))}\n          </Section>\n        )}\n        {error && <Message color=\"#e74c3c\" text={error} />}\n        {tvResults && movieResults && tvResults.length === 0 && movieResults.length === 0 && (\n          <Message text=\"Nothing found\" color=\"#95a5a6\" />\n        )}\n      </>\n    )}\n  </Container>\n)\n\nSearchPresenter.propTypes = {\n  movieResults: PropTypes.array,\n  tvResults: PropTypes.array,\n  error: PropTypes.string,\n  searchTerm: PropTypes.string,\n  loading: PropTypes.bool.isRequired,\n  handleSubmit: PropTypes.func.isRequired,\n  updateTerm: PropTypes.func.isRequired,\n}\n\nexport default SearchPresenter\n","import SearchContainer from './SearchContainer'\n\nexport default SearchContainer\n","import React from 'react'\nimport SearchPresenter from './SearchPresenter'\nimport { moviesApi, tvApi } from '../../api'\n\nexport default class extends React.Component {\n  state = {\n    movieResults: null,\n    tvResults: null,\n    searchTerm: '',\n    loading: false,\n    error: null,\n  }\n\n  handleSubmit = event => {\n    event.preventDefault()\n    const { searchTerm } = this.state\n    if (searchTerm !== '') {\n      this.searchByTerm()\n    }\n  }\n\n  updateTerm = event => {\n    const {\n      target: { value },\n    } = event\n    this.setState({\n      searchTerm: value,\n    })\n  }\n\n  searchByTerm = async () => {\n    const { searchTerm } = this.state\n    this.setState({ loading: true })\n    try {\n      const {\n        data: { results: movieResults },\n      } = await moviesApi.search(searchTerm)\n      const {\n        data: { results: tvResults },\n      } = await tvApi.search(searchTerm)\n      this.setState({\n        movieResults,\n        tvResults,\n      })\n    } catch {\n      this.setState({ error: \"Can't find results.\" })\n    } finally {\n      this.setState({ loading: false })\n    }\n  }\n\n  render() {\n    const { movieResults, tvResults, searchTerm, loading, error } = this.state\n    return (\n      <SearchPresenter\n        movieResults={movieResults}\n        tvResults={tvResults}\n        loading={loading}\n        error={error}\n        searchTerm={searchTerm}\n        handleSubmit={this.handleSubmit}\n        updateTerm={this.updateTerm}\n      />\n    )\n  }\n}\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport styled from 'styled-components'\nimport Helmet from 'react-helmet'\nimport Loader from 'Components/Loader'\n\nconst Container = styled.div`\n  height: calc(100vh - 50px);\n  width: 100%;\n  position: relative;\n  padding: 50px;\n`\n\nconst Backdrop = styled.div`\n  position: absolute;\n  top: 0;\n  left: 0;\n  width: 100%;\n  height: 100%;\n  background-image: url(${props => props.bgImage});\n  background-position: center center;\n  background-size: cover;\n  filter: blur(3px);\n  opacity: 0.5;\n  z-index: 0;\n`\n\nconst Content = styled.div`\n  display: flex;\n  width: 100%;\n  position: relative;\n  z-index: 1;\n  height: 100%;\n`\n\nconst Cover = styled.div`\n  width: 30%;\n  background-image: url(${props => props.bgImage});\n  background-position: center center;\n  background-size: cover;\n  height: 100%;\n  border-radius: 5px;\n`\n\nconst Data = styled.div`\n  width: 70%;\n  margin-left: 10px;\n`\n\nconst Title = styled.h3`\n  font-size: 32px;\n`\n\nconst ItemContainer = styled.div`\n  margin: 20px 0;\n`\n\nconst Item = styled.span``\n\nconst Divider = styled.span`\n  margin: 0 10px;\n`\n\nconst Overview = styled.p`\n  font-size: 12px;\n  opacity: 0.7;\n  line-height: 1.5;\n  width: 50%;\n`\n\nconst DetailPresenter = ({ result, loading, error }) =>\n  loading ? (\n    <>\n      <Helmet>\n        <title>Loading | GFlix</title>\n      </Helmet>\n      <Loader />\n    </>\n  ) : (\n    <Container>\n      <Helmet>\n        <title>\n          {result.original_title ? result.original_title : result.original_name} | GFlix\n        </title>\n      </Helmet>\n      <Backdrop bgImage={`https://image.tmdb.org/t/p/original${result.backdrop_path}`} />\n      <Content>\n        <Cover\n          bgImage={\n            result.poster_path\n              ? `https://image.tmdb.org/t/p/original${result.poster_path}`\n              : require('../../assets/noPosterSmall.png')\n          }\n        />\n        <Data>\n          <Title>{result.original_title ? result.original_title : result.original_name}</Title>\n          <ItemContainer>\n            <Item>\n              {result.release_date\n                ? result.release_date.substring(0, 4)\n                : result.first_air_date.substring(0, 4)}\n            </Item>\n            <Divider>•</Divider>\n            <Item>{result.runtime ? result.runtime : result.episode_run_time[0]} min</Item>\n            <Divider>•</Divider>\n            <Item>\n              {result.genres &&\n                result.genres.map((genre, index) =>\n                  index === result.genres.length - 1 ? genre.name : `${genre.name} / `,\n                )}\n            </Item>\n          </ItemContainer>\n          <Overview>{result.overview}</Overview>\n        </Data>\n      </Content>\n    </Container>\n  )\n\nDetailPresenter.propTypes = {\n  result: PropTypes.object,\n  loading: PropTypes.bool.isRequired,\n  error: PropTypes.string,\n}\n\nexport default DetailPresenter\n","import DetailContainer from './DetailContainer'\n\nexport default DetailContainer\n","import React from 'react'\nimport DetailPresenter from './DetailPresenter'\nimport { moviesApi, tvApi } from '../../api'\n\nexport default class extends React.Component {\n  constructor(props) {\n    super(props)\n    const {\n      location: { pathname },\n    } = props\n    this.state = {\n      result: null,\n      error: null,\n      loading: true,\n      isMovie: pathname.includes('/movie/'),\n    }\n  }\n\n  async componentDidMount() {\n    const {\n      match: {\n        params: { id },\n      },\n      history: { push },\n    } = this.props\n    const { isMovie } = this.state\n    const parsedId = parseInt(id)\n    if (isNaN(parsedId)) {\n      return push('/')\n    }\n    let result = null\n    try {\n      if (isMovie) {\n        ;({ data: result } = await moviesApi.movieDetail(parsedId))\n      } else {\n        ;({ data: result } = await tvApi.showDetail(parsedId))\n      }\n    } catch {\n      this.setState({ error: \"Can't find anything.\" })\n    } finally {\n      this.setState({ loading: false, result })\n    }\n  }\n\n  render() {\n    const { result, error, loading } = this.state\n    return <DetailPresenter result={result} error={error} loading={loading} />\n  }\n}\n","import React from 'react'\nimport { HashRouter as Router, Route, Redirect, Switch } from 'react-router-dom'\nimport Home from 'Routes/Home'\nimport TV from 'Routes/TV'\nimport Header from 'Components/Header'\nimport Search from 'Routes/Search'\nimport Detail from 'Routes/Detail'\n\nexport default () => (\n  <Router>\n    <>\n      <Header />\n      <Switch>\n        <Route path=\"/\" exact component={Home} />\n        <Route path=\"/tv\" component={TV} />\n        <Route path=\"/search\" component={Search} />\n        <Route path=\"/movie/:id\" component={Detail} />\n        <Route path=\"/show/:id\" component={Detail} />\n        <Redirect from=\"*\" to=\"/\" />\n      </Switch>\n    </>\n  </Router>\n)\n","import { createGlobalStyle } from 'styled-components'\nimport reset from 'styled-reset'\n\nconst globalStyles = createGlobalStyle`\n    ${reset};\n    a{\n        text-decoration:none;\n        color:inherit;\n    }\n    *{\n        box-sizing:border-box;\n    }\n    body{\n        font-family:-apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, 'Open Sans', 'Helvetica Neue', sans-serif;\n        font-size:12px;\n        background-color:rgba(20, 20, 20, 1);\n        color:white;\n        padding-top:50px;\n    }\n`\n\nexport default globalStyles\n","import React, { Component } from 'react'\nimport Router from 'Components/Router'\nimport GlobalStyles from 'Components/GlobalStyles'\n\nclass App extends Component {\n  render() {\n    return (\n      <>\n        <Router />\n        <GlobalStyles />\n      </>\n    )\n  }\n}\n\nexport default App\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from 'Components/App'\n\nReactDOM.render(<App />, document.getElementById('root'))\n"],"sourceRoot":""}